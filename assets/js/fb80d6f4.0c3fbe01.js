"use strict";(self.webpackChunkgetstart=self.webpackChunkgetstart||[]).push([[972],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>u});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var l=a.createContext({}),p=function(e){var t=a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},c=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},k=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=p(r),k=n,u=d["".concat(l,".").concat(k)]||d[k]||m[k]||o;return r?a.createElement(u,s(s({ref:t},c),{},{components:r})):a.createElement(u,s({ref:t},c))}));function u(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,s=new Array(o);s[0]=k;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[d]="string"==typeof e?e:n,s[1]=i;for(var p=2;p<o;p++)s[p]=r[p];return a.createElement.apply(null,s)}return a.createElement.apply(null,r)}k.displayName="MDXCreateElement"},333:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var a=r(7462),n=(r(7294),r(3905));const o={title:"Portainer GUI",sidebar_label:"Portainer",slug:"portainer",tags:["docker swarm","stack"]},s=void 0,i={unversionedId:"stack/portainer-stack",id:"stack/portainer-stack",title:"Portainer GUI",description:"Already deployed:",source:"@site/docs-docker-swarm/stack/portainer-stack.md",sourceDirName:"stack",slug:"/stack/portainer",permalink:"/getstart/docker-swarm/stack/portainer",draft:!1,tags:[{label:"docker swarm",permalink:"/getstart/docker-swarm/tags/docker-swarm"},{label:"stack",permalink:"/getstart/docker-swarm/tags/stack"}],version:"current",lastUpdatedBy:"imoize",lastUpdatedAt:1691211684,formattedLastUpdatedAt:"Aug 5, 2023",frontMatter:{title:"Portainer GUI",sidebar_label:"Portainer",slug:"portainer",tags:["docker swarm","stack"]},sidebar:"tutorialSidebar",previous:{title:"Ghost",permalink:"/getstart/docker-swarm/stack/ghost"},next:{title:"Traefik",permalink:"/getstart/docker-swarm/stack/traefik"}},l={},p=[{value:"Create Persistent Volume",id:"create-persistent-volume",level:3},{value:"Stack",id:"stack",level:3},{value:"Deploy Services",id:"deploy-services",level:3}],c={toc:p},d="wrapper";function m(e){let{components:t,...r}=e;return(0,n.kt)(d,(0,a.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("admonition",{title:"Prereq",type:"tip"},(0,n.kt)("p",{parentName:"admonition"},"Already deployed:"),(0,n.kt)("p",{parentName:"admonition"},"\u2705 Docker ",(0,n.kt)("a",{parentName:"p",href:"/getstart/docker-swarm/swarm-mode"},"swarm cluster")," with persistent ",(0,n.kt)("a",{parentName:"p",href:"/getstart/docker-swarm/shared-storage"},"shared storage")),(0,n.kt)("p",{parentName:"admonition"},"\u2705 ",(0,n.kt)("a",{parentName:"p",href:"/getstart/docker-swarm/stack/traefik"},"Traefik"))),(0,n.kt)("p",null,"Portainer is a lightweight UI for visualizing your docker environment. It also happens to integrate well with Docker Swarm clusters, which makes it a great fit for our stack."),(0,n.kt)("p",null,"It's a great addition to any stack, especially if you're just starting your containerization journey!"),(0,n.kt)("h3",{id:"create-persistent-volume"},"Create Persistent Volume"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"sudo mkdir /var/data/portainer\ncd /var/data/portainer\n")),(0,n.kt)("h3",{id:"stack"},"Stack"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"sudo micro portainer-stack.yaml\n")),(0,n.kt)("admonition",{title:"note",type:"info"},(0,n.kt)("p",{parentName:"admonition"},"If you use traefik to expose portainer then uncomment ",(0,n.kt)("inlineCode",{parentName:"p"},"labels")," and change ",(0,n.kt)("inlineCode",{parentName:"p"},"ports")," section.")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-yaml"},'version: \'3.9\'\n\nservices:\n  app:\n    image: portainer/portainer-ce:latest\n    command: -H tcp://tasks.agent:9001 --tlsskipverify\n    ports:\n      - target: 9000\n        published: 9000\n        protocol: tcp\n        mode: host\n    networks:\n      - agent_network\n      - traefik_proxy\n    volumes:\n      - /var/data/portainer:/data\n    deploy:\n      mode: replicated\n      replicas: 1\n      # labels:\n      #   - "traefik.enable=true"\n      #   - "traefik.docker.network=traefik_proxy"      \n      #   - "traefik.http.routers.portainer.rule=Host(`portainer.example.com`)"\n      #   - "traefik.http.routers.portainer.entrypoints=https"\n      #   - "traefik.http.routers.portainer.middlewares=authelia@file"\n      #   - "traefik.http.services.portainer.loadbalancer.server.port=9000"\n      #   - "traefik.http.services.portainer.loadbalancer.server.scheme=https"\n      placement:\n        constraints: [node.role == manager] # or use node.hostname option to specify placement\n\n  agent:\n    image: portainer/agent:latest\n    networks:\n      - agent_network\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock\n      - /var/lib/docker/volumes:/var/lib/docker/volumes\n    deploy:\n      mode: global\n      placement:\n        constraints: [node.platform.os == linux]\n\nnetworks:\n  agent_network:\n    name: agent_network\n    driver: overlay\n    external: false\n\n  traefik_proxy:\n    external: true\n')),(0,n.kt)("h3",{id:"deploy-services"},"Deploy Services"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"sudo docker stack deploy portainer -c portainer-stack.yaml\n")))}m.isMDXComponent=!0}}]);