"use strict";(self.webpackChunkgetstart=self.webpackChunkgetstart||[]).push([[537],{3905:(e,a,t)=>{t.d(a,{Zo:()=>u,kt:()=>h});var n=t(7294);function r(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function s(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?s(Object(t),!0).forEach((function(a){r(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function o(e,a){if(null==e)return{};var t,n,r=function(e,a){if(null==e)return{};var t,n,r={},s=Object.keys(e);for(n=0;n<s.length;n++)t=s[n],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)t=s[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=n.createContext({}),c=function(e){var a=n.useContext(l),t=a;return e&&(t="function"==typeof e?e(a):i(i({},a),e)),t},u=function(e){var a=c(e.components);return n.createElement(l.Provider,{value:a},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},m=n.forwardRef((function(e,a){var t=e.components,r=e.mdxType,s=e.originalType,l=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),p=c(t),m=r,h=p["".concat(l,".").concat(m)]||p[m]||d[m]||s;return t?n.createElement(h,i(i({ref:a},u),{},{components:t})):n.createElement(h,i({ref:a},u))}));function h(e,a){var t=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var s=t.length,i=new Array(s);i[0]=m;var o={};for(var l in a)hasOwnProperty.call(a,l)&&(o[l]=a[l]);o.originalType=e,o[p]="string"==typeof e?e:r,i[1]=o;for(var c=2;c<s;c++)i[c]=t[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}m.displayName="MDXCreateElement"},2920:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>s,metadata:()=>o,toc:()=>c});var n=t(7462),r=(t(7294),t(3905));const s={id:"authelia",title:"Authelia",sidebar_label:"Authelia",slug:"authelia",tags:["docker swarm","stack"]},i=void 0,o={unversionedId:"stack/authelia",id:"stack/authelia",title:"Authelia",description:"Already deployed:",source:"@site/docs-docker-swarm/stack/authelia-stack.md",sourceDirName:"stack",slug:"/stack/authelia",permalink:"/getstart/docker-swarm/stack/authelia",draft:!1,tags:[{label:"docker swarm",permalink:"/getstart/docker-swarm/tags/docker-swarm"},{label:"stack",permalink:"/getstart/docker-swarm/tags/stack"}],version:"current",lastUpdatedBy:"imoize",lastUpdatedAt:1691211684,formattedLastUpdatedAt:"Aug 5, 2023",frontMatter:{id:"authelia",title:"Authelia",sidebar_label:"Authelia",slug:"authelia",tags:["docker swarm","stack"]},sidebar:"tutorialSidebar",previous:{title:"Swarm Mode",permalink:"/getstart/docker-swarm/swarm-mode"},next:{title:"Cloudflared",permalink:"/getstart/docker-swarm/stack/cloudflared"}},l={},c=[{value:"Create Persistent Volume",id:"create-persistent-volume",level:3},{value:"Configuration File",id:"configuration-file",level:3},{value:"Users Database",id:"users-database",level:3},{value:"Stack",id:"stack",level:3},{value:"Deploy Services",id:"deploy-services",level:3}],u={toc:c},p="wrapper";function d(e){let{components:a,...t}=e;return(0,r.kt)(p,(0,n.Z)({},u,t,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("admonition",{title:"Prereq",type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"Already deployed:"),(0,r.kt)("p",{parentName:"admonition"},"\u2705 Docker ",(0,r.kt)("a",{parentName:"p",href:"/getstart/docker-swarm/swarm-mode"},"swarm cluster")," with persistent ",(0,r.kt)("a",{parentName:"p",href:"/getstart/docker-swarm/shared-storage"},"shared storage")),(0,r.kt)("p",{parentName:"admonition"},"\u2705 ",(0,r.kt)("a",{parentName:"p",href:"/getstart/docker-swarm/stack/traefik"},"Traefik"))),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://raw.githubusercontent.com/authelia/authelia/master/docs/static/images/archi.svg",alt:null})),(0,r.kt)("p",null,"Authelia is an open source Single Sign On and 2FA companion for reverse proxies. It helps you secure your endpoints with single factor and 2 factor auth. It works with Nginx, Traefik, and HA proxy. Today, we\u2019ll configure Authelia with Traefik and have 2 Factor up and running with brute force protection!"),(0,r.kt)("h3",{id:"create-persistent-volume"},"Create Persistent Volume"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo mkdir -p /var/data/authelia/{log,config,redis}\ncd /var/data/authelia\n")),(0,r.kt)("h3",{id:"configuration-file"},"Configuration File"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo micro configuration.yml\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'---\n###############################################################\n#                   Authelia configuration                    #\n###############################################################\n\nserver:\n  host: 0.0.0.0\n  port: 9091\n\nlog:\n  level: info\n  format: json\n  file_path: "/var/log/authelia/authelia.log"\n  keep_stdout: true\n\ntheme: dark\n# This secret can also be set using the env variables AUTHELIA_JWT_SECRET_FILE\njwt_secret: a_very_important_secret\ndefault_redirection_url: https://auth.example.com\n\ntotp:\n  issuer: authelia.com\n\n# duo_api:\n#  hostname: api-123456789.example.com\n#  integration_key: ABCDEF\n#  # This secret can also be set using the env variables AUTHELIA_DUO_API_SECRET_KEY_FILE\n#  secret_key: 1234567890abcdefghifjkl\n\nauthentication_backend:\n  file:\n    path: /config/users_database.yml\n    password:\n      algorithm: argon2id\n      iterations: 1\n      salt_length: 16\n      parallelism: 8\n      memory: 64\n      \naccess_control:\n  default_policy: deny\n  rules:\n    # Rules applied to everyone\n    - domain: auth.example.com\n      policy: bypass\n    - domain: whoami1.example.com\n      policy: one_factor\n    - domain: whoami2.example.com\n      policy: two_factor\n\nsession:\n  name: authelia_session\n  # This secret can also be set using the env variables AUTHELIA_SESSION_SECRET_FILE\n  secret: unsecure_session_secret\n  expiration: 3600  # 1 hour\n  inactivity: 300  # 5 minutes\n  domain: example.com  # Should match whatever your root protected domain is\n\n  # Enable redis if using HA or swarm\n  # redis:\n  #   host: authelia_redis\n  #   port: 6379\n  #   # This secret can also be set using the env variables AUTHELIA_SESSION_REDIS_PASSWORD_FILE\n  #   password: REDIS_PASSWORD\n  #   database_index: 0\n  #   maximum_active_connections: 10\n  #   minimum_idle_connections: 0\n\nregulation:\n  max_retries: 3\n  find_time: 120\n  ban_time: 300\n\nstorage:\n  encryption_key: a_very_important_secret # Now required\n  local:\n    path: /config/db.sqlite3\n\nnotifier:\n  # smtp:\n  #   username: test\n  #   # This secret can also be set using the env variables AUTHELIA_NOTIFIER_SMTP_PASSWORD_FILE\n  #   password: password\n  #   host: mail.example.com\n  #   port: 25\n  #   sender: admin@example.com\n  filesystem:\n    filename: /config/notification.txt\n...\n')),(0,r.kt)("h3",{id:"users-database"},"Users Database"),(0,r.kt)("p",null,"To generate hashed password please run this docker run command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo docker run authelia/authelia:latest authelia hash-password YOUR_PASSWORD\n")),(0,r.kt)("p",null,"Copy generated password and paste in users_database.yml"),(0,r.kt)("p",null,"Add users database file"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo micro users_database.yml\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'---\n###############################################################\n#                         Users Database                      #\n###############################################################\n\n# This file can be used if you do not have an LDAP set up.\n\n# List of users\nusers:\n  username: # change with your username\n    displayname: "Your Name"\n    password: "YOUR_HASH_PASSWORD" \n    email: email@example.com\n    groups:\n      - admins\n      - dev\n...\n')),(0,r.kt)("h3",{id:"stack"},"Stack"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo micro authelia-stack.yaml\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'version: \'3.9\'\n\nservices:\n  auth:\n    image: authelia/authelia:latest\n    environment:\n      - TZ=Asia/Jakarta\n    networks:\n      - traefik_proxy\n    volumes:\n      - /var/data/authelia/config:/config\n      - /var/data/authelia/log:/var/log/authelia\n    deploy:\n      mode: replicated\n      replicas: 1\n      labels:\n        - "traefik.enable=true"\n        - "traefik.docker.network=traefik_proxy"\n        - "traefik.http.routers.authelia.rule=Host(`auth.example.com`)"\n        - "traefik.http.routers.authelia.entrypoints=https"\n        - "traefik.http.services.authelia.loadbalancer.server.port=9091"\n    healthcheck:\n      disable: true\n\n  redis:\n    image: redis:alpine\n    command: /bin/sh -c \'redis-server --appendonly yes --requirepass $${REDIS_PASSWORD}\'\n    environment:\n      - REDIS_PASSWORD=YOUR_REDIS_PASSWORD\n    networks:\n      - traefik_proxy\n    volumes:\n      - /var/data/authelia/redis:/data\n    deploy:\n      mode: replicated\n      replicas: 1\n\nnetworks:\n  traefik_proxy:\n    external: true\n')),(0,r.kt)("h3",{id:"deploy-services"},"Deploy Services"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo docker stack deploy authelia -c authelia-stack.yaml\n")))}d.isMDXComponent=!0}}]);